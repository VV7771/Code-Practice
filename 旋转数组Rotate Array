//Given an array, rotate the array to the right by k steps, where k is non-negative.
//给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。
//Input: nums = [1,2,3,4,5,6,7], k = 3
//Output:[5, 6, 7, 1, 2, 3, 4]
//Explanation :
//			rotate 1 steps to the right : [7, 1, 2, 3, 4, 5, 6]
//			rotate 2 steps to the right : [6, 7, 1, 2, 3, 4, 5]
//			rotate 3 steps to the right : [5, 6, 7, 1, 2, 3, 4]

//way 1：三段逆置

void reverse(int* nums, int left, int right)//逆置
{
	while (left < right)
	{
		int temp = nums[left];
		nums[left] = nums[right];
		nums[right] = temp;
		++left;
		--right;
	}
}

void rotate(int* nums, int numsSize, int k)
{
	if (k > numsSize)
	{
		k %= numsSize;
	}
    
	reverse(nums, 0, numsSize - k - 1);//前段逆置
	reverse(nums, numsSize - k, numsSize - 1);//后段逆置
	reverse(nums, 0, numsSize - 1);//整体逆置
}

//way 2：开数组 取余放置
void rotate(int* nums, int numsSize, int k)
{
    
    int arr[numsSize];
    
    for (int i = 0; i < numsSize; ++i)
    {
        arr[(i + k) % numsSize] = nums[i];
    }

    for (int i = 0; i < numsSize; ++i) 
    {
        nums[i] = arr[i];
    }
}
